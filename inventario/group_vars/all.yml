# inventario/group_vars/all.yml
---
# Caminho absoluto para a pasta de artefatos
pasta_artefatos: "{{ playbook_dir }}/../artefatos"

# Pasta onde ficam os artefatos dos certificados
pasta_temporarios: "{{ pasta_artefatos }}/tmp"

# Redes do projeto
rede_cidr_hosts: "172.24.0.0/24"
rede_cidr_pods: "172.24.4.0/24"
rede_cidr_services: "172.24.8.0/24"

# Primeiros IPs das redes
primeiro_ip_hosts: "{{ rede_cidr_hosts | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}"
primeiro_ip_pods: "{{ rede_cidr_pods | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}"
primeiro_ip_services: "{{ rede_cidr_services | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }}"

# Portas usadas no projeto
porta_etcd_https: 2379
porta_etcd_peers: 2380
porta_etcd_metricas: 2381
porta_kubeapiserver: 6443

############################################
### Configurações para a role 03-haproxy ###
############################################

# Timeouts
haproxy_timeout_connect: 5s
haproxy_timeout_client: 1h
haproxy_timeout_server: 1h
haproxy_timeout_tunnel: 12h
haproxy_timeout_check: 5s
haproxy_retries: 3

# Credenciais
haproxy_stats_usr: "admin"
haproxy_stats_senha: "senha_muito_segura!"

# Portas
porta_haproxy_stats: 9000

# Configuração de hosts para os endpoints principais
vip_api_fqdn: "api.k8sbox.local"
vip_etcd_fqdn: "etcd.k8sbox.local"

# Configuração do Keepalived
keepalived_vip_ip: "172.24.0.10"
keepalived_vip_cidr: "172.24.0.10/24"
keepalived_senha: "SenhaSuperSecreta123"

##############################################
### Configurações para a role 00-artefatos ###
##############################################

# Para verificar as versões e os checksums:
# - Etcd: https://github.com/etcd-io/etcd/releases/
# - Kubernetes: https://kubernetes.io/releases/download/#binaries

# Versões dos componentes
versao_etcd: "v3.6.5"         # https://endoflife.date/etcd
versao_kubernetes: "v1.34.1"  # https://endoflife.date/kubernetes e https://dl.k8s.io/release/stable.txt
versao_pause: "pause:3.10.1"  # https://kubernetes.io/docs/setup/production-environment/container-runtimes/#override-pause-image-containerd

download_artefatos:
  tailspin-bin:
    url: "https://github.com/bensadeh/tailspin/releases/latest/download/tailspin-x86_64-unknown-linux-musl.tar.gz"
    arquivo: "tailspin.tar.gz"

  etcd-bin:
    url: "https://github.com/etcd-io/etcd/releases/download/{{ versao_etcd }}/etcd-{{ versao_etcd }}-linux-amd64.tar.gz"
    arquivo: "etcd-bin.tar.gz"
    checksum: "sha256:66bad39ed920f6fc15fd74adcb8bfd38ba9a6412f8c7852d09eb11670e88cac3"

  kube-apiserver-bin:
    url: "https://dl.k8s.io/release/{{ versao_kubernetes }}/bin/linux/amd64/kube-apiserver"
    arquivo: "kube-apiserver"
    checksum: "sha256:a170577ea20f8c37a522114a259c36ec4ed397482d8f282c265248dedf2216c3"

  kubelet-bin:
    url: "https://dl.k8s.io/release/{{ versao_kubernetes }}/bin/linux/amd64/kubelet"
    arquivo: "kubelet"
    checksum: "sha256:5a72c596c253ea0b0e5bcc6f29903fd41d1d542a7cadf3700c165a2a041a8d82"

  kube-controller-manager-bin:
    url: "https://dl.k8s.io/release/{{ versao_kubernetes }}/bin/linux/amd64/kube-controller-manager"
    arquivo: "kube-controller-manager"
    checksum: "sha256:91b7aa8c599f93515f347d3ee7fb12229a40db0ca02da3e7c5dc96fbca3ad2f3"

  kube-scheduler-bin:
    url: "https://dl.k8s.io/release/{{ versao_kubernetes }}/bin/linux/amd64/kube-scheduler"
    arquivo: "kube-scheduler"
    checksum: "sha256:460f5bc48ef176c82fea3592f66ba71ae5bda376f93d86f7fe44fc4759ac577b"

  kube-proxy-bin:
    url: "https://dl.k8s.io/release/{{ versao_kubernetes }}/bin/linux/amd64/kube-proxy"
    arquivo: "kube-proxy"
    checksum: "sha256:1b1e7d07f45825fc62888913f906bb519d7a08d0323dea94b959579a81d3e139"

  kubectl-bin:
    url: "https://dl.k8s.io/release/{{ versao_kubernetes }}/bin/linux/amd64/kubectl"
    arquivo: "kubectl"
    checksum: "sha256:7721f265e18709862655affba5343e85e1980639395d5754473dafaadcaa69e3"

########################################
### Configurações para a role 02-pki ###
########################################

# Pasta onde ficam os artefatos dos certificados
pki_pasta_base: "{{ pasta_artefatos }}/pki"

# Pastas para os CAs e certificados:
pki_pastas:
  ca: "{{ pki_pasta_base }}/CAs"
  etcd: "{{ pki_pasta_base }}/etcd"
  k8s: "{{ pki_pasta_base }}/k8s"

# Configuração que decide se os certificados serão regerados
pki_regerar_certs: false

# Configurações para o Root CA
pki_root_ca:
  path_chave: "{{ pki_pastas.ca }}/root-ca-priv.pem"
  path_cert: "{{ pki_pastas.ca }}/root-ca-cert.pem"

# Configurações para os CAs intermediários
pki_cas:
  etcd:
    path_chave: "{{ pki_pastas.ca }}/ca-etcd-priv.pem"
    path_cert: "{{ pki_pastas.ca }}/ca-etcd-cert.pem"
    ca_pai: "{{ pki_root_ca }}"
  
  kubernetes:
    path_chave: "{{ pki_pastas.ca }}/ca-k8s-priv.pem"
    path_cert: "{{ pki_pastas.ca }}/ca-k8s-cert.pem"
    ca_pai: "{{ pki_root_ca }}"

  front_proxy:
    path_chave: "{{ pki_pastas.ca }}/ca-front-proxy-priv.pem"
    path_cert: "{{ pki_pastas.ca }}/ca-front-proxy-cert.pem"
    ca_pai: "{{ pki_root_ca }}"

# Configurações para os certificados
pki_certs:
  etcd_server:
    path_chave: "{{ pki_pastas.etcd }}/%s-etcd-node-server-priv.pem"
    path_cert: "{{ pki_pastas.etcd }}/%s-etcd-node-server-cert.pem"
    ca_pai: "{{ pki_cas['etcd'] }}"
  
  etcd_peer:
    path_chave: "{{ pki_pastas.etcd }}/%s-etcd-node-peer-priv.pem"
    path_cert: "{{ pki_pastas.etcd }}/%s-etcd-node-peer-cert.pem"
    ca_pai: "{{ pki_cas['etcd'] }}"

  etcd_cli:
    path_chave: "{{ pki_pastas.etcd }}/etcd-cli-priv.pem"
    path_cert: "{{ pki_pastas.etcd }}/etcd-cli-cert.pem"
    ca_pai: "{{ pki_cas['etcd'] }}"

  kube_apiserver:
    path_chave: "{{ pki_pastas.k8s }}/%s-kube-apiserver-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/%s-kube-apiserver-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"

  kube_apiserver_etcd_cli:
    path_chave: "{{ pki_pastas.etcd }}/kube-apiserver-etcd-cli-priv.pem"
    path_cert: "{{ pki_pastas.etcd }}/kube-apiserver-etcd-cli-cert.pem"
    ca_pai: "{{ pki_cas['etcd'] }}"

  kube_apiserver_kubelet_cli:
    path_chave: "{{ pki_pastas.k8s }}/kube-apiserver-kubelet-cli-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/kube-apiserver-kubelet-cli-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"

  kube_front_proxy_cli:
    path_chave: "{{ pki_pastas.k8s }}/kube-front-proxy-cli-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/kube-front-proxy-cli-cert.pem"
    ca_pai: "{{ pki_cas['front_proxy'] }}"

  kube_controller_manager:
    path_chave: "{{ pki_pastas.k8s }}/%s-kube-controller-manager-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/%s-kube-controller-manager-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"

  kube_scheduler:
    path_chave: "{{ pki_pastas.k8s }}/%s-kube-scheduler-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/%s-kube-scheduler-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"

  kubelet:
    path_chave: "{{ pki_pastas.k8s }}/%s-kubelet-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/%s-kubelet-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"

  kube_proxy:
    path_chave: "{{ pki_pastas.k8s }}/%s-kube-proxy-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/%s-kube-proxy-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"

  service_account:
    path_chave: "{{ pki_pastas.k8s }}/service-account-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/service-account-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"

  admin_account:
    path_chave: "{{ pki_pastas.k8s }}/admin-account-priv.pem"
    path_cert: "{{ pki_pastas.k8s }}/admin-account-cert.pem"
    ca_pai: "{{ pki_cas['kubernetes'] }}"
