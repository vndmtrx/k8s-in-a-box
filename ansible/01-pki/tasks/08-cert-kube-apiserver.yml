# ansible/01-pki/tasks/08-cert-kube-apiserver.yml
---
- name: Verificar arquivos existentes da chave do kube-apiserver ({{ manager_host }})
  ansible.builtin.stat:
    path: "{{ arquivo }}"
  loop:
    - "{{ pki_certs.kube_apiserver.path_chave | format(manager_host) }}"
    - "{{ pki_certs.kube_apiserver.path_cert | format(manager_host) }}"
  loop_control:
    loop_var: arquivo
    label: "{{ arquivo }}"
  register: kube_apiserver_arquivos
  delegate_to: localhost

- name: Criar chave privada do certificado para o kube-apiserver ({{ manager_host }})
  community.crypto.openssl_privatekey:
    path: "{{ pki_certs.kube_apiserver.path_chave | format(manager_host) }}"
    type: "{{ pki_cifra_tipo }}"
    curve: "{{ pki_cifra_algo }}"
    state: "present"
    force: true
  when: not kube_apiserver_arquivos.results[0].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost

- name: Gerar CSR do certificado para o kube-apiserver ({{ manager_host }})
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ pki_certs.kube_apiserver.path_chave | format(manager_host) }}"
    digest: "{{ pki_algoritmo_hash }}"
    subject: "{{ pki_subject_padrao 
      | combine({
        'OU': 'Kubernetes API Server',
        'CN': 'kube-apiserver'
      })
    }}"
    use_common_name_for_san: false
    key_usage:
      - digitalSignature
    key_usage_critical: true
    extended_key_usage:
      - serverAuth
    extended_key_usage_critical: true
    subject_alt_name: "{{ lookup('template', '08-san-kube-apiserver.j2') | from_yaml }}"
  when: not kube_apiserver_arquivos.results[1].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost
  register: kube_apiserver_csr

- name: Assinar certificado para o kube-apiserver ({{ manager_host }}) com o respectivo CA intermedi√°rio
  community.crypto.x509_certificate:
    path: "{{ pki_certs.kube_apiserver.path_cert | format(manager_host) }}"
    csr_content: "{{ kube_apiserver_csr.csr }}"
    provider: ownca
    ownca_path: "{{ pki_certs.kube_apiserver.ca_pai.path_cert }}"
    ownca_privatekey_path: "{{ pki_certs.kube_apiserver.ca_pai.path_chave }}"
    ownca_digest: "{{ pki_algoritmo_hash }}"
    ownca_not_after: "+{{ pki_validade.certificado | default(30) }}d"
    mode: "0644"
    force: true
  when: not kube_apiserver_arquivos.results[1].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost
