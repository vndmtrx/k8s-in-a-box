# ansible/01-pki/tasks/02-root-ca.yml
---
- name: Verificar arquivos existentes da CA para mTLS do etcd
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - "{{ pki_root_ca.path_chave }}"
    - "{{ pki_root_ca.path_csr }}"
    - "{{ pki_root_ca.path_cert }}"
  register: ca_root_arquivos

- name: Criar chave privada do Root CA
  community.crypto.openssl_privatekey:
    path: "{{ pki_root_ca.path_chave }}"
    type: "{{ pki_cifra_tipo }}"
    curve: "{{ pki_cifra_algo }}"
    state: "present"
    force: true
  when: not ca_root_arquivos.results[0].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost

- name: Gerar CSR do Root CA
  community.crypto.openssl_csr:
    path: "{{ pki_root_ca.path_csr }}"
    privatekey_path: "{{ pki_root_ca.path_chave }}"
    digest: "{{ pki_algoritmo_hash }}"
    mode: 0600
    subject: "{{ pki_root_ca.subject }}"
    use_common_name_for_san: "{{ pki_root_ca.usar_cn_como_san }}"
    basic_constraints: "{{ pki_root_ca.basic_constraints }}"
    basic_constraints_critical: "{{ pki_root_ca.basic_constraints_critical }}"
    key_usage: "{{ pki_root_ca.key_usage }}"
    key_usage_critical: "{{ pki_root_ca.key_usage_critical }}"
    force: true
  when: not ca_root_arquivos.results[1].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost

- name: Criar certificado auto-assinado do Root CA
  community.crypto.x509_certificate:
    path: "{{ pki_root_ca.path_cert }}"
    csr_path: "{{ pki_root_ca.path_csr }}"
    privatekey_path: "{{ pki_root_ca.path_chave }}"
    provider: selfsigned
    selfsigned_digest: "{{ pki_algoritmo_hash }}"
    selfsigned_not_after: "+{{ pki_validade.root | default(1825) }}d"
    mode: "0644"
    force: true
  when: not ca_root_arquivos.results[2].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost
