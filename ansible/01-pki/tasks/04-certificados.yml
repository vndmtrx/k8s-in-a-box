# ansible/01-pki/tasks/04-certificados.yml
---
- name: Verificar arquivos existentes do certificado ({{ item.key }})
  ansible.builtin.stat:
    path: "{{ arquivo }}"
  loop:
    - "{{ item.value.path_chave }}"
    - "{{ item.value.path_csr }}"
    - "{{ item.value.path_cert }}"
  loop_control:
    loop_var: arquivo
    label: "{{ arquivo }}"
  register: certificado_arquivos
  delegate_to: localhost

- name: Criar chave privada do certificado ({{ item.key }})
  community.crypto.openssl_privatekey:
    path: "{{ item.value.path_chave }}"
    type: "{{ pki_cifra_tipo }}"
    curve: "{{ pki_cifra_algo }}"
    state: "present"
    force: true
  when: not certificado_arquivos.results[0].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost

- name: Gerar CSR do certificado ({{ item.key }})
  community.crypto.openssl_csr:
    path: "{{ item.value.path_csr }}"
    privatekey_path: "{{ item.value.path_chave }}"
    digest: "{{ pki_algoritmo_hash }}"
    mode: "0600"
    subject: "{{ item.value.subject }}"
    use_common_name_for_san: false
    key_usage: "{{ item.value.key_usage }}"
    key_usage_critical: "{{ item.value.key_usage_critical }}"
    extended_key_usage: "{{ item.value.extended_key_usage }}"
    extended_key_usage_critical: "{{ item.value.extended_key_usage_critical }}"
    subject_alt_name: "{{ item.value.san }}"
    force: true
  when: not certificado_arquivos.results[1].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost

- name: Assinar certificado do certificado ({{ item.key }}) com o respectivo CA intermedi√°rio
  community.crypto.x509_certificate:
    path: "{{ item.value.path_cert }}"
    csr_path: "{{ item.value.path_csr }}"
    provider: ownca
    ownca_path: "{{ item.value.ca_pai.path_cert }}"
    ownca_privatekey_path: "{{ item.value.ca_pai.path_chave }}"
    ownca_digest: "{{ pki_algoritmo_hash }}"
    ownca_not_after: "+{{ pki_validade.certificado | default(30) }}d"
    mode: "0644"
    force: true
  when: not certificado_arquivos.results[2].stat.exists or (pki_regerar_certs | default(false) | bool)
  delegate_to: localhost
