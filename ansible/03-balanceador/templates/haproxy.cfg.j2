global
    log 127.0.0.1 local2
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    stats socket /var/lib/haproxy/stats expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Aumenta limite de conexões
    maxconn 5000

defaults
    log     global
    mode    tcp
    option  dontlognull
    option dontlog-normal
    option  tcp-smart-accept
    option  tcp-smart-connect
    timeout connect {{ haproxy_timeout_connect }}
    timeout client  {{ haproxy_timeout_client }}
    timeout server  {{ haproxy_timeout_server }}
    timeout tunnel  {{ haproxy_timeout_tunnel }}
    timeout check   {{ haproxy_timeout_check }}
    retries         {{ haproxy_retries }}

######################## Cluster ########################

# Frontend para o Kubernetes API Server
frontend k8s_api
    bind *:{{ porta_kubeapiserver }}
    mode tcp
    option tcplog
    default_backend k8s_api_backend

# Frontend para a porta HTTP do etcd
frontend etcd_https
    bind *:{{ porta_etcd_https }}
    mode tcp
    option tcplog
    default_backend etcd_https_backend

# Backend para o Kubernetes API Server
backend k8s_api_backend
    mode tcp
    balance roundrobin
    option tcp-check
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host].fqdn }}:{{ porta_kubeapiserver }} check inter 5s rise 2 fall 3
{% endfor %}

# Backend para a porta HTTPS do etcd
backend etcd_https_backend
    mode tcp
    balance roundrobin
    option tcp-check
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host].fqdn }}:{{ porta_etcd_https }} check port {{ porta_etcd_metricas }} observe layer4 error-limit 50 on-error mark-down inter 5s rise 2 fall 3
{% endfor %}

# Frontend para estatísticas e administração
frontend stats
    bind *:{{ porta_haproxy_stats }}
    mode http
    stats enable
    stats uri /stats
    stats show-node
    stats show-legends
    stats show-desc K8s e Etcd
    stats refresh 10s
    stats admin if TRUE
    stats auth {{ haproxy_stats_usr }}:{{ haproxy_stats_senha }}

######################## Ingress Controller ########################
frontend ingress_http
    bind *:80
    mode tcp
    option tcplog
    default_backend ingress_http_backend

frontend ingress_https
    bind *:443
    mode tcp
    option tcplog
    default_backend ingress_https_backend

backend ingress_http_backend
    mode tcp
    balance roundrobin
    option tcp-check
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host].fqdn }}:30080 check inter 5s rise 2 fall 3
{% endfor %}

backend ingress_https_backend
    mode tcp
    balance roundrobin
    option tcp-check
{% for host in groups['managers'] %}
    server {{ host }} {{ hostvars[host].fqdn }}:30443 check inter 5s rise 2 fall 3
{% endfor %}
